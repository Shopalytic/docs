<h2 id="customer_register">customer_register</h2>
Called directly after a customer registers for a new account

<pre>Required Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`email` | the email address of the customer. Email address must be unique. If another customer is registered with the same email address the event will be ignored. | string | example@gmail.com
`first_name` | the first name of the customer | string | Mike
`last_name` | the last name of the customer | string | Smith

<pre>Optional Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`join_date` | date and time the customer registered for the account. If no join_date is provided we will default to the current date and time. The timestamp should be the number of seconds after the UTC Unix epoch. | timestamp | 1365698517


<h2 id="customer_update">customer_update</h2>
Update the properties of a customer. Only the fields specified will be updated.

<pre>Optional Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`email` | the updated email address of the customer. If another customer is registered with the same email address the entire update event will be ignored. | string | example123@gmail.com
`first_name` | the updated first name of the customer | string | John
`last_name` | the updated last name of the customer | string | Doe


<h2 id="cart_add">cart_add</h2>
Called after a customer adds an item to their shopping cart 

<pre>Required Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`cart_id` | id that uniquely identifies the shopping cart. In most cases this will be a cart or order id generated by your commerce platform | string | 123456
`sku` | the sku that identifies the product being added | string | tshirt-red
`price` | the cost of the product. This should be the price of a single quantity of the product and not the price multiplied by the quantity. Currency markings should be excluded. | decimal | 20.99
`qty` | the quantity of the sku added to the cart | int | 3


<h2 id="cart_modify">cart_modify</h2>
Called when an item in the cart has been modified or deleted

<pre>Required Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`cart_id` | id that uniquely identifies the shopping cart | string | 123456
`sku` | the sku that identifies the product being modified | string | tshirt-red

<pre>Optional Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---
`qty` | the new quantity. If the original quantity was "5" and the updated quantity was set to "7", `qty` would be set to "7". Set the quantity to "0" if the item has been removed from the cart. | int | 7
`price` | the new price. Only needs to be set if the price of the sku has changed since it was originally added. | decimal | 9.99


<h2 id="order">order</h2>
Called after a customer successfully places an order

<pre>Required Parameters</pre>
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---      
`order_id` | unique id used to identify the order. This is usually a cart or order id generated by your commerce platform. | string | 123456
`cart_id` | id used to identify the shopping cart (see [cart_add](#cart_add). If you are importing records or not using the [cart_add](#cart_add) functionality you can set the `cart_id` to the same value as `order_id`. | string | 6789
`order_date` | date and time the order was placed | timestamp | 1365698517
`total` | the total cost of the order including any tax, shipping and less any discounts | decimal | 97.16
`subtotal` | the combined cost of all the products in the order. Excludes shipping, tax, and discounts | decimal | 88.96
`line_items` | array of dictionaries that describe the products being purchased | array of dict
 | <pre>Required Parameters</pre>
 | `sku`: code that uniquely identifies the product | string | hat-yellow
 | `price`: the cost of a single quantity of the product | decimal | 9.99
 | `qty`: the quantity of the product being ordered | int | 3
 | <pre>Optional Parameters</pre>
 | `cost`: the businesses cost to sell a single quantity of this product | decimal | 6.5

<pre>Optional Parameters</pre> 
*Parameter* | *Description* | *Type* | *Example*
--- | --- | --- | ---    
`billing` | dictionary with details about the billing location | dictionary
 | <pre>Required Parameters</pre>
 | `city`: of the person being billed | string | New York
 | `zipcode`: of the person being billed. For US zipcodes use the 5 digit code. | string | 10016
 | `country`: of the person being billed. Use the 3 letter country code. | string | USA
 | <pre>Optional Parameters</pre>
 | `state`: of the person being billed. Not required for US addresses. | string | New York
`shipping` | dictionary with details about the shipping location | dictionary
 | <pre>Required Parameters</pre>
 | `city`: of where the order is shipping to | string | New York
 | `zipcode`: of where the order is shipping to. For US zipcodes use the 5 digit code. | string | 10016
 | `country`: of where the order is shipping to. Use the 3 letter country code. | string | USA
 | <pre>Optional Parameters</pre>
 | `state`: of where the order is shipping to. Not required for US addresses. | string | New York      
`total_tax` | the cost of tax for the order | decimal | 3.87
`total_shipping` | the of shipping the order | decimal | 9.99
`payment_type` | the method used to pay for the order. This field is free form and can take any payment method you specify. A few examples are: visa, amex, paypal, google checkout or, site credit. You could also take a more generic approach and use credit card, cash, or check. The more specific the better analysis we can provide. | string |visa
`discounts` | array of dictionaries listing any discounts applied to the order. In the case where there are dynamic coupon codes that can only be used once, we suggest setting the `code` to the name of the group of coupons. | array of dict
 | <pre>Required Parameters</pre>
 | `code`: the code that identifies the coupon | string | FREE-SHIPPING
 | `value`: the value this code has on the order. For example if an order was $50 and the discount code took 10% off the subtotal, then `value` would be 5. | decimal | 5
